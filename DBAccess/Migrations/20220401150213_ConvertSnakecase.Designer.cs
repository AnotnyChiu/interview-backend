// <auto-generated />
using System;
using DBAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DBAccess.Migrations
{
    [DbContext(typeof(InterviewDbContext))]
    [Migration("20220401150213_ConvertSnakecase")]
    partial class ConvertSnakecase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Entity.Candidate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CurrentStageId")
                        .HasColumnType("integer")
                        .HasColumnName("current_stage_id");

                    b.Property<char>("Gender")
                        .HasColumnType("character(1)")
                        .HasColumnName("gender");

                    b.Property<int?>("JobPositionId")
                        .HasColumnType("integer")
                        .HasColumnName("job_position_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_candidate");

                    b.HasIndex("CurrentStageId")
                        .HasDatabaseName("ix_candidate_current_stage_id");

                    b.HasIndex("JobPositionId")
                        .HasDatabaseName("ix_candidate_job_position_id");

                    b.ToTable("candidate");
                });

            modelBuilder.Entity("Entity.Interview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CandidateId")
                        .HasColumnType("integer")
                        .HasColumnName("candidate_id");

                    b.Property<DateTimeOffset>("InterviewTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("interview_time");

                    b.Property<int?>("InterviewerId")
                        .HasColumnType("integer")
                        .HasColumnName("interviewer_id");

                    b.Property<bool>("Passed")
                        .HasColumnType("boolean")
                        .HasColumnName("passed");

                    b.Property<string>("Status")
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_interview");

                    b.HasIndex("CandidateId")
                        .HasDatabaseName("ix_interview_candidate_id");

                    b.HasIndex("InterviewerId")
                        .HasDatabaseName("ix_interview_interviewer_id");

                    b.ToTable("interview");
                });

            modelBuilder.Entity("Entity.InterviewStage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("Passed")
                        .HasColumnType("boolean")
                        .HasColumnName("passed");

                    b.Property<int>("StageCode")
                        .HasColumnType("integer")
                        .HasColumnName("stage_code");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_interview_stages");

                    b.ToTable("interview_stages");
                });

            modelBuilder.Entity("Entity.Interviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("EmpId")
                        .HasColumnType("text")
                        .HasColumnName("emp_id");

                    b.HasKey("Id")
                        .HasName("pk_interviewer");

                    b.ToTable("interviewer");
                });

            modelBuilder.Entity("Entity.JobPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("CurrentOpened")
                        .HasColumnType("boolean")
                        .HasColumnName("current_opened");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<string>("WorkPlace")
                        .HasColumnType("text")
                        .HasColumnName("work_place");

                    b.HasKey("Id")
                        .HasName("pk_job_positions");

                    b.ToTable("job_positions");
                });

            modelBuilder.Entity("Entity.Candidate", b =>
                {
                    b.HasOne("Entity.InterviewStage", "CurrentStage")
                        .WithMany()
                        .HasForeignKey("CurrentStageId")
                        .HasConstraintName("fk_candidate_interview_stages_current_stage_id");

                    b.HasOne("Entity.JobPosition", "JobPosition")
                        .WithMany()
                        .HasForeignKey("JobPositionId")
                        .HasConstraintName("fk_candidate_job_positions_job_position_id");

                    b.Navigation("CurrentStage");

                    b.Navigation("JobPosition");
                });

            modelBuilder.Entity("Entity.Interview", b =>
                {
                    b.HasOne("Entity.Candidate", "Candidate")
                        .WithMany()
                        .HasForeignKey("CandidateId")
                        .HasConstraintName("fk_interview_candidate_candidate_id");

                    b.HasOne("Entity.Interviewer", "Interviewer")
                        .WithMany()
                        .HasForeignKey("InterviewerId")
                        .HasConstraintName("fk_interview_interviewer_interviewer_id");

                    b.Navigation("Candidate");

                    b.Navigation("Interviewer");
                });
#pragma warning restore 612, 618
        }
    }
}
